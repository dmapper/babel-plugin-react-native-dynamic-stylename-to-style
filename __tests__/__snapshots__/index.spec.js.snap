// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`babel-plugin-react-native-stylename-to-style Generated code shoud match 'Should transform single styleName to styles object' test : Generated code shoud match 'Should transform single styleName to styles object' test  1`] = `
"
import styles from './Button.css';
const Foo = () =>  <View style={styles.wrapper}><Text>Foo</Text></View>

      ↓ ↓ ↓ ↓ ↓ ↓

'use strict';

var _Button = require('./Button.css');

var _Button2 = _interopRequireDefault(_Button);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var Foo = function Foo() {
  return React.createElement(
    View,
    { style: _Button2.default.wrapper },
    React.createElement(
      Text,
      null,
      'Foo'
    )
  );
};
"
`;

exports[`babel-plugin-react-native-stylename-to-style Should NOT transform styleName if the import extension does not match the one in plugin options: Should NOT transform styleName if the import extension does not match the one in plugin options 1`] = `
"
import './Button.scss';
const Foo = () =>  <View styleName=\\"wrapper\\"><Text>Foo</Text></View>

      ↓ ↓ ↓ ↓ ↓ ↓

\\"use strict\\";

require(\\"./Button.scss\\");

var Foo = function Foo() {
  return React.createElement(
    View,
    { styleName: \\"wrapper\\" },
    React.createElement(
      Text,
      null,
      \\"Foo\\"
    )
  );
};
"
`;

exports[`babel-plugin-react-native-stylename-to-style Should ignore anonymous imports with other extensions and transform single styleName to styles object: Should ignore anonymous imports with other extensions and transform single styleName to styles object 1`] = `
"
import './foo.js';
import './Button.css';
import './Button.scss';
const Foo = () =>  <View styleName=\\"wrapper\\"><Text>Foo</Text></View>

      ↓ ↓ ↓ ↓ ↓ ↓

'use strict';

require('./foo.js');

var _Button = require('./Button.css');

var _Button2 = _interopRequireDefault(_Button);

require('./Button.scss');

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var Foo = function Foo() {
  return React.createElement(
    View,
    { style: _Button2.default.wrapper },
    React.createElement(
      Text,
      null,
      'Foo'
    )
  );
};
"
`;

exports[`babel-plugin-react-native-stylename-to-style Should throw an error when multiple anonymous imports are used: Should throw an error when multiple anonymous imports are used 1`] = `
"
import './Button.css';
import './Text.css';
const Foo = () =>  <View styleName=\\"wrapper\\"><Text>Foo</Text></View>

      ↓ ↓ ↓ ↓ ↓ ↓

Error: index.js: Cannot use anonymous style name with more than one stylesheet import.
"
`;

exports[`babel-plugin-react-native-stylename-to-style Should throw an error when multiple anonymous imports are used: Should throw an error when multiple anonymous imports are used 2`] = `
"
import './Button.css';
import foo from './foo.js';
import './Text.css';
const Foo = () =>  <View styleName=\\"wrapper\\"><Text>Foo</Text></View>

      ↓ ↓ ↓ ↓ ↓ ↓

Error: index.js: Cannot use anonymous style name with more than one stylesheet import.
"
`;

exports[`babel-plugin-react-native-stylename-to-style Should throw if no extensions defined in options: Should throw if no extensions defined in options 1`] = `
"
import './Button.css';
const Foo = () =>  <View styleName=\\"wrapper\\"><Text>Foo</Text></View>

      ↓ ↓ ↓ ↓ ↓ ↓

Error: index.js: You have not specified any extensions in the plugin options.
"
`;

exports[`babel-plugin-react-native-stylename-to-style Should transform multiple styleName classes to styles object and merge with style tag: Should transform multiple styleName classes to styles object and merge with style tag 1`] = `
"
import './Button.css';
const Foo = () =>  <View styleName=\\"wrapper red\\" style={{ marginTop: 10 }}><Text>Foo</Text></View>

      ↓ ↓ ↓ ↓ ↓ ↓

\\"use strict\\";

var _Button = require(\\"./Button.css\\");

var _Button2 = _interopRequireDefault(_Button);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var Foo = function Foo() {
  return React.createElement(
    View,
    { style: [_Button2.default.wrapper, _Button2.default.red, { marginTop: 10 }] },
    React.createElement(
      Text,
      null,
      \\"Foo\\"
    )
  );
};
"
`;

exports[`babel-plugin-react-native-stylename-to-style Should transform multiple styleName classes to styles object: Should transform multiple styleName classes to styles object 1`] = `
"
import './Button.css';
const Foo = () =>  <View styleName=\\"wrapper red\\"><Text>Foo</Text></View>

      ↓ ↓ ↓ ↓ ↓ ↓

\\"use strict\\";

var _Button = require(\\"./Button.css\\");

var _Button2 = _interopRequireDefault(_Button);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var Foo = function Foo() {
  return React.createElement(
    View,
    { style: [_Button2.default.wrapper, _Button2.default.red] },
    React.createElement(
      Text,
      null,
      \\"Foo\\"
    )
  );
};
"
`;

exports[`babel-plugin-react-native-stylename-to-style Should transform multiple styleName classes with whitespace to styles object: Should transform multiple styleName classes with whitespace to styles object 1`] = `
"
import './Button.css';
const Foo = () =>  <View styleName=\\"  wrapper  red  \\"><Text>Foo</Text></View>

      ↓ ↓ ↓ ↓ ↓ ↓

\\"use strict\\";

var _Button = require(\\"./Button.css\\");

var _Button2 = _interopRequireDefault(_Button);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var Foo = function Foo() {
  return React.createElement(
    View,
    { style: [_Button2.default.wrapper, _Button2.default.red] },
    React.createElement(
      Text,
      null,
      \\"Foo\\"
    )
  );
};
"
`;

exports[`babel-plugin-react-native-stylename-to-style Should transform single styleName to styles object and merge with style tag: Should transform single styleName to styles object and merge with style tag 1`] = `
"
import './Button.css';
const Foo = () =>  <View styleName=\\"wrapper\\" style={{ marginTop: 10 }}><Text>Foo</Text></View>

      ↓ ↓ ↓ ↓ ↓ ↓

\\"use strict\\";

var _Button = require(\\"./Button.css\\");

var _Button2 = _interopRequireDefault(_Button);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var Foo = function Foo() {
  return React.createElement(
    View,
    { style: [_Button2.default.wrapper, { marginTop: 10 }] },
    React.createElement(
      Text,
      null,
      \\"Foo\\"
    )
  );
};
"
`;

exports[`babel-plugin-react-native-stylename-to-style Should transform single styleName to styles object: Should transform single styleName to styles object 1`] = `
"
import './Button.css';
const Foo = () =>  <View styleName=\\"wrapper\\"><Text>Foo</Text></View>

      ↓ ↓ ↓ ↓ ↓ ↓

\\"use strict\\";

var _Button = require(\\"./Button.css\\");

var _Button2 = _interopRequireDefault(_Button);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var Foo = function Foo() {
  return React.createElement(
    View,
    { style: _Button2.default.wrapper },
    React.createElement(
      Text,
      null,
      \\"Foo\\"
    )
  );
};
"
`;
